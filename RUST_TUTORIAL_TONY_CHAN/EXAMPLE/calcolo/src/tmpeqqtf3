/*Mettiamo insieme queste componenti per creare un semplice programma che legge
un input dall'utente, effettua un calcolo e gestisce eventuali errori:
*/

use std::io;        //import la libreria

fn main() {
    println!("PROG!");

    println!("Inserisci un numero:");
    //creo una variabile mutevole
     let mut input = String::new();
     //leggo la linea di comando con gestione errori
     io::stdin().read_line(&mut input).expect("Errore nella lettura dell'input");

/*âœ… Cosa fa riga per riga:
ðŸ”¹ let numero: i32 = ...;
    Dichiara una variabile chiamata numero di tipo intero a 32 bit (i32).
ðŸ”¹ input.trim()
        input Ã¨ presumibilmente una String ottenuta da input dell'utente (es. da stdin).
    .trim() rimuove spazi bianchi (iniziali e finali), inclusi: spazi tab newline \n o \r\n
    Esempio: " 42\n" â†’ "42"
ðŸ”¹ .parse()
        Tenta di convertire la stringa in un valore del tipo specificato.
        In questo caso, i32 (un numero intero).
        parse() restituisce un Result, che puÃ² essere:
        Ok(numero) se la conversione va a buon fine
        Err(...) se fallisce (es. "abc" non Ã¨ un numero)
ðŸ”¹ .expect("Inserisci un numero valido")
    Se parse() fallisce, expect() termina il programma e mostra il messaggio:


*/
     let numero: i32 = input.trim().parse().expect("Inserisci un numero valido");

   let risultato = if numero > 40 {
        "Il numero Ã¨ maggiore di 40."
    } else {
        "Il numero Ã¨ 40 o minore."
    };

    println!("{}", risultato);


}
